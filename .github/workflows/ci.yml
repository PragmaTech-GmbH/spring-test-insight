name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-extension:
    name: Test Extension
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('spring-test-insight-extension/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Test extension
        working-directory: spring-test-insight-extension
        run: ./mvnw clean verify
        
      - name: Install extension to local repository
        working-directory: spring-test-insight-extension
        run: ./mvnw clean install -DskipTests
        
      - name: Upload extension test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: extension-test-results
          path: |
            spring-test-insight-extension/target/surefire-reports/
            spring-test-insight-extension/target/spring-test-insight/
            
  test-demos:
    name: Test Demo Projects
    runs-on: ubuntu-latest
    needs: test-extension
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        demo: 
          - spring-boot-3.4-maven
          - spring-boot-3.5-maven
          - spring-boot-3.5-gradle
          - spring-boot-3.5-maven-failsafe-parallel
          - spring-boot-3.5-maven-junit-parallel
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          
      - name: Cache Maven dependencies
        if: contains(matrix.demo, 'maven')
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('demo/${{ matrix.demo }}/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
          
      - name: Cache Gradle dependencies
        if: contains(matrix.demo, 'gradle')
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('demo/${{ matrix.demo }}/**/*.gradle*', 'demo/${{ matrix.demo }}/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
          
      - name: Install extension to local repository
        working-directory: spring-test-insight-extension
        run: ./mvnw clean install -DskipTests
        
      - name: Build demo project
        id: build-demo
        continue-on-error: true
        working-directory: demo/${{ matrix.demo }}
        run: |
          chmod +x build.sh
          ./build.sh
          
      - name: Load build environment
        if: always()
        working-directory: demo/${{ matrix.demo }}
        run: |
          if [ -f build-env.properties ]; then
            cat build-env.properties >> $GITHUB_ENV
          fi
          
      - name: Report demo status
        if: always()
        run: |
          echo "### Test results for ${{ matrix.demo }}"
          if [ "${{ steps.build-demo.outcome }}" == "success" ]; then
            echo "✅ Tests passed"
          else
            echo "❌ Tests failed"
          fi
        
      - name: Upload demo test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: demo-test-results-${{ matrix.demo }}
          path: |
            demo/${{ matrix.demo }}/${{ env.SPRING_TEST_INSIGHT_REPORTS }}/
            demo/${{ matrix.demo }}/${{ env.SUREFIRE_REPORTS }}/
            demo/${{ matrix.demo }}/${{ env.FAILSAFE_REPORTS }}/
            demo/${{ matrix.demo }}/${{ env.TEST_REPORTS }}/
            demo/${{ matrix.demo }}/${{ env.TEST_RESULTS }}/
            
  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-extension, test-demos]
    if: always()
    
    steps:
      - name: Test Results Summary
        run: |
          echo "## Test Results Summary"
          echo ""
          echo "### Extension Tests"
          if [ "${{ needs.test-extension.result }}" == "success" ]; then
            echo "✅ Extension tests passed"
          else
            echo "❌ Extension tests failed"
          fi
          echo ""
          echo "### Demo Projects"
          echo "Demo tests status: ${{ needs.test-demos.result }}"
          echo ""
          echo "Note: Individual demo project results can be found in the workflow run details."
          
      - name: Check critical failures
        if: needs.test-extension.result == 'failure'
        run: |
          echo "Critical failure: Extension tests failed"
          exit 1
          
      - name: Final status
        run: |
          if [ "${{ needs.test-extension.result }}" == "success" ]; then
            echo "✅ Core extension tests passed - build is acceptable"
            echo "Check individual demo results in the matrix job above"
          else
            echo "Build failed due to extension test failures"
            exit 1
          fi